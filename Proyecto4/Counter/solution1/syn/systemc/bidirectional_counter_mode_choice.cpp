// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "bidirectional_counter_mode_choice.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic bidirectional_counter_mode_choice::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic bidirectional_counter_mode_choice::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> bidirectional_counter_mode_choice::ap_ST_fsm_state1 = "1";
const bool bidirectional_counter_mode_choice::ap_const_boolean_1 = true;
const sc_lv<32> bidirectional_counter_mode_choice::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> bidirectional_counter_mode_choice::ap_const_lv1_1 = "1";
const sc_lv<1> bidirectional_counter_mode_choice::ap_const_lv1_0 = "0";
const sc_lv<12> bidirectional_counter_mode_choice::ap_const_lv12_0 = "000000000000";
const sc_lv<12> bidirectional_counter_mode_choice::ap_const_lv12_FFF = "111111111111";
const sc_lv<12> bidirectional_counter_mode_choice::ap_const_lv12_1 = "1";

bidirectional_counter_mode_choice::bidirectional_counter_mode_choice(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_CS_fsm);

    SC_METHOD(thread_ap_CS_fsm_state1);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( counter_out_i_ap_vld );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op41_read_state1 );

    SC_METHOD(thread_ap_predicate_op29_read_state1);
    sensitive << ( grp_read_fu_68_p2 );
    sensitive << ( tmp_1_read_fu_74_p2 );
    sensitive << ( tmp_2_read_fu_80_p2 );

    SC_METHOD(thread_ap_predicate_op41_read_state1);
    sensitive << ( grp_read_fu_68_p2 );
    sensitive << ( tmp_1_read_fu_74_p2 );
    sensitive << ( tmp_2_read_fu_80_p2 );

    SC_METHOD(thread_bidirectional_counter_count_V_o);
    sensitive << ( counter_out_i_ap_vld );
    sensitive << ( bidirectional_counter_count_V_i );
    sensitive << ( grp_read_fu_68_p2 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_read_fu_74_p2 );
    sensitive << ( tmp_2_read_fu_80_p2 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op41_read_state1 );
    sensitive << ( v_V_2_fu_114_p2 );
    sensitive << ( v_V_fu_122_p2 );

    SC_METHOD(thread_bidirectional_counter_count_V_o_ap_vld);
    sensitive << ( counter_out_i_ap_vld );
    sensitive << ( grp_read_fu_68_p2 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_read_fu_74_p2 );
    sensitive << ( tmp_2_read_fu_80_p2 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op41_read_state1 );

    SC_METHOD(thread_counter_out_o);
    sensitive << ( counter_out_i );
    sensitive << ( counter_out_i_ap_vld );
    sensitive << ( grp_read_fu_68_p2 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_read_fu_74_p2 );
    sensitive << ( tmp_2_read_fu_80_p2 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op41_read_state1 );
    sensitive << ( v_V_2_fu_114_p2 );
    sensitive << ( v_V_fu_122_p2 );

    SC_METHOD(thread_counter_out_o_ap_vld);
    sensitive << ( counter_out_i_ap_vld );
    sensitive << ( grp_read_fu_68_p2 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_read_fu_74_p2 );
    sensitive << ( tmp_2_read_fu_80_p2 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op41_read_state1 );

    SC_METHOD(thread_grp_read_fu_68_p2);
    sensitive << ( enable );
    sensitive << ( counter_out_i_ap_vld );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op41_read_state1 );

    SC_METHOD(thread_tmp_1_read_fu_74_p2);
    sensitive << ( mode );
    sensitive << ( counter_out_i_ap_vld );
    sensitive << ( grp_read_fu_68_p2 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op41_read_state1 );

    SC_METHOD(thread_tmp_2_read_fu_80_p2);
    sensitive << ( reset );
    sensitive << ( counter_out_i_ap_vld );
    sensitive << ( grp_read_fu_68_p2 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op41_read_state1 );

    SC_METHOD(thread_v_V_2_fu_114_p2);
    sensitive << ( bidirectional_counter_count_V_i );

    SC_METHOD(thread_v_V_fu_122_p2);
    sensitive << ( bidirectional_counter_count_V_i );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( counter_out_i_ap_vld );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_predicate_op29_read_state1 );
    sensitive << ( ap_predicate_op41_read_state1 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "bidirectional_counter_mode_choice_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, reset, "(port)reset");
    sc_trace(mVcdFile, enable, "(port)enable");
    sc_trace(mVcdFile, mode, "(port)mode");
    sc_trace(mVcdFile, counter_out_i, "(port)counter_out_i");
    sc_trace(mVcdFile, counter_out_o, "(port)counter_out_o");
    sc_trace(mVcdFile, counter_out_i_ap_vld, "(port)counter_out_i_ap_vld");
    sc_trace(mVcdFile, counter_out_o_ap_vld, "(port)counter_out_o_ap_vld");
    sc_trace(mVcdFile, bidirectional_counter_count_V_i, "(port)bidirectional_counter_count_V_i");
    sc_trace(mVcdFile, bidirectional_counter_count_V_o, "(port)bidirectional_counter_count_V_o");
    sc_trace(mVcdFile, bidirectional_counter_count_V_o_ap_vld, "(port)bidirectional_counter_count_V_o_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, grp_read_fu_68_p2, "grp_read_fu_68_p2");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_1_read_fu_74_p2, "tmp_1_read_fu_74_p2");
    sc_trace(mVcdFile, tmp_2_read_fu_80_p2, "tmp_2_read_fu_80_p2");
    sc_trace(mVcdFile, ap_predicate_op29_read_state1, "ap_predicate_op29_read_state1");
    sc_trace(mVcdFile, ap_predicate_op41_read_state1, "ap_predicate_op41_read_state1");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, v_V_2_fu_114_p2, "v_V_2_fu_114_p2");
    sc_trace(mVcdFile, v_V_fu_122_p2, "v_V_fu_122_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

bidirectional_counter_mode_choice::~bidirectional_counter_mode_choice() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void bidirectional_counter_mode_choice::thread_ap_CS_fsm() {
    ap_CS_fsm = ap_ST_fsm_state1;
}

void bidirectional_counter_mode_choice::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_ST_fsm_state1[0];
}

void bidirectional_counter_mode_choice::thread_ap_block_state1() {
    ap_block_state1 = ((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1)));
}

void bidirectional_counter_mode_choice::thread_ap_predicate_op29_read_state1() {
    ap_predicate_op29_read_state1 = (esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_1_read_fu_74_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_read_fu_80_p2.read()));
}

void bidirectional_counter_mode_choice::thread_ap_predicate_op41_read_state1() {
    ap_predicate_op41_read_state1 = (esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_read_fu_80_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_read_fu_74_p2.read()));
}

void bidirectional_counter_mode_choice::thread_bidirectional_counter_count_V_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1) && 
         !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))))) {
        bidirectional_counter_count_V_o = v_V_fu_122_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1) && 
                !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))))) {
        bidirectional_counter_count_V_o = v_V_2_fu_114_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(tmp_1_read_fu_74_p2.read(), ap_const_lv1_0) && 
                 !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_80_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_read_fu_74_p2.read()) && 
                 !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_80_p2.read())))) {
        bidirectional_counter_count_V_o = ap_const_lv12_0;
    } else {
        bidirectional_counter_count_V_o = bidirectional_counter_count_V_i.read();
    }
}

void bidirectional_counter_mode_choice::thread_bidirectional_counter_count_V_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(tmp_1_read_fu_74_p2.read(), ap_const_lv1_0) && 
          !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_80_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1) && 
          !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_read_fu_74_p2.read()) && 
          !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_80_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1) && 
          !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1)))))) {
        bidirectional_counter_count_V_o_ap_vld = ap_const_logic_1;
    } else {
        bidirectional_counter_count_V_o_ap_vld = ap_const_logic_0;
    }
}

void bidirectional_counter_mode_choice::thread_counter_out_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1) && 
         !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))))) {
        counter_out_o = v_V_fu_122_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1) && 
                !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))))) {
        counter_out_o = v_V_2_fu_114_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(tmp_1_read_fu_74_p2.read(), ap_const_lv1_0) && 
                 !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_80_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_read_fu_74_p2.read()) && 
                 !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_80_p2.read())))) {
        counter_out_o = ap_const_lv12_0;
    } else {
        counter_out_o = counter_out_i.read();
    }
}

void bidirectional_counter_mode_choice::thread_counter_out_o_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(tmp_1_read_fu_74_p2.read(), ap_const_lv1_0) && 
          !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_80_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1) && 
          !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(grp_read_fu_68_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_read_fu_74_p2.read()) && 
          !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1))) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_read_fu_80_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1) && 
          !((esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op41_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(counter_out_i_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_read_state1.read(), ap_const_boolean_1)))))) {
        counter_out_o_ap_vld = ap_const_logic_1;
    } else {
        counter_out_o_ap_vld = ap_const_logic_0;
    }
}

void bidirectional_counter_mode_choice::thread_grp_read_fu_68_p2() {
    grp_read_fu_68_p2 =  (sc_lv<1>) (enable.read());
}

void bidirectional_counter_mode_choice::thread_tmp_1_read_fu_74_p2() {
    tmp_1_read_fu_74_p2 =  (sc_lv<1>) (mode.read());
}

void bidirectional_counter_mode_choice::thread_tmp_2_read_fu_80_p2() {
    tmp_2_read_fu_80_p2 =  (sc_lv<1>) (reset.read());
}

void bidirectional_counter_mode_choice::thread_v_V_2_fu_114_p2() {
    v_V_2_fu_114_p2 = (!bidirectional_counter_count_V_i.read().is_01() || !ap_const_lv12_FFF.is_01())? sc_lv<12>(): (sc_biguint<12>(bidirectional_counter_count_V_i.read()) + sc_bigint<12>(ap_const_lv12_FFF));
}

void bidirectional_counter_mode_choice::thread_v_V_fu_122_p2() {
    v_V_fu_122_p2 = (!bidirectional_counter_count_V_i.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(bidirectional_counter_count_V_i.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void bidirectional_counter_mode_choice::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

