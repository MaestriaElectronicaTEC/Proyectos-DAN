// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StateMachine_getNextState (
        ap_clk,
        ap_rst,
        key,
        current_state_i,
        current_state_i_ap_vld,
        current_state_o,
        current_state_o_ap_vld,
        StateMachine_state_V,
        StateMachine_state_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;



input   ap_clk;
input   ap_rst;
input  [7:0] key;
input  [11:0] current_state_i;
input   current_state_i_ap_vld;
output  [11:0] current_state_o;
output   current_state_o_ap_vld;
output  [11:0] StateMachine_state_V;
output   StateMachine_state_V_ap_vld;

reg current_state_o_ap_vld;
reg StateMachine_state_V_ap_vld;

wire   [11:0] val_V_read_fu_66_p2;
reg   [11:0] ap_phi_mux_v_V_phi_fu_96_p18;
reg   [11:0] v_V_reg_92;
wire   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [11:0] storemerge_cast_cast_fu_152_p3;
wire   [11:0] storemerge1_cast_cas_fu_161_p3;
wire   [0:0] grp_fu_122_p2;
wire   [11:0] p_val_V_cast_fu_170_p3;
wire   [11:0] p_val_V1_cast_fu_143_p3;
wire   [11:0] p_val_V2_cast_fu_134_p3;
wire    ap_CS_fsm_state2;
wire   [0:0] grp_fu_128_p2;
reg   [1:0] ap_NS_fsm;

always @ (posedge ap_clk) begin
    if (((current_state_i_ap_vld == 1'b1) & (grp_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd4))) begin
        v_V_reg_92 <= p_val_V2_cast_fu_134_p3;
    end else if (((current_state_i_ap_vld == 1'b1) & (grp_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd3))) begin
        v_V_reg_92 <= p_val_V1_cast_fu_143_p3;
    end else if (((current_state_i_ap_vld == 1'b1) & (grp_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd0))) begin
        v_V_reg_92 <= p_val_V_cast_fu_170_p3;
    end else if ((((current_state_i_ap_vld == 1'b1) & (grp_fu_122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd0)) | ((current_state_i_ap_vld == 1'b1) & (grp_fu_122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd3)) | ((current_state_i_ap_vld == 1'b1) & (grp_fu_122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd4)))) begin
        v_V_reg_92 <= 12'd1;
    end else if (((current_state_i_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd1))) begin
        v_V_reg_92 <= storemerge1_cast_cas_fu_161_p3;
    end else if (((current_state_i_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd2))) begin
        v_V_reg_92 <= storemerge_cast_cast_fu_152_p3;
    end else if ((~(val_V_read_fu_66_p2 == 12'd0) & ~(val_V_read_fu_66_p2 == 12'd1) & ~(val_V_read_fu_66_p2 == 12'd2) & ~(val_V_read_fu_66_p2 == 12'd3) & ~(val_V_read_fu_66_p2 == 12'd4) & (current_state_i_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v_V_reg_92 <= current_state_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        StateMachine_state_V_ap_vld = 1'b1;
    end else begin
        StateMachine_state_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd4))) begin
        ap_phi_mux_v_V_phi_fu_96_p18 = p_val_V2_cast_fu_134_p3;
    end else if (((grp_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd3))) begin
        ap_phi_mux_v_V_phi_fu_96_p18 = p_val_V1_cast_fu_143_p3;
    end else if (((grp_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd0))) begin
        ap_phi_mux_v_V_phi_fu_96_p18 = p_val_V_cast_fu_170_p3;
    end else if ((((grp_fu_122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd0)) | ((grp_fu_122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd3)) | ((grp_fu_122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd4)))) begin
        ap_phi_mux_v_V_phi_fu_96_p18 = 12'd1;
    end else if (((1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd1))) begin
        ap_phi_mux_v_V_phi_fu_96_p18 = storemerge1_cast_cas_fu_161_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (val_V_read_fu_66_p2 == 12'd2))) begin
        ap_phi_mux_v_V_phi_fu_96_p18 = storemerge_cast_cast_fu_152_p3;
    end else if ((~(val_V_read_fu_66_p2 == 12'd0) & ~(val_V_read_fu_66_p2 == 12'd1) & ~(val_V_read_fu_66_p2 == 12'd2) & ~(val_V_read_fu_66_p2 == 12'd3) & ~(val_V_read_fu_66_p2 == 12'd4) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_v_V_phi_fu_96_p18 = current_state_i;
    end else begin
        ap_phi_mux_v_V_phi_fu_96_p18 = 'bx;
    end
end

always @ (*) begin
    if (((current_state_i_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        current_state_o_ap_vld = 1'b1;
    end else begin
        current_state_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((current_state_i_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign StateMachine_state_V = v_V_reg_92;

assign ap_CS_fsm = ap_ST_fsm_state1;

assign ap_CS_fsm_state1 = ap_ST_fsm_state1[32'd0];

assign ap_CS_fsm_state2 = ap_ST_fsm_state1[32'd1];

assign current_state_o = ap_phi_mux_v_V_phi_fu_96_p18;

assign grp_fu_122_p2 = ((key == 8'd97) ? 1'b1 : 1'b0);

assign grp_fu_128_p2 = ((key == 8'd98) ? 1'b1 : 1'b0);

assign p_val_V1_cast_fu_143_p3 = ((grp_fu_128_p2[0:0] === 1'b1) ? 12'd4 : 12'd3);

assign p_val_V2_cast_fu_134_p3 = ((grp_fu_128_p2[0:0] === 1'b1) ? 12'd2 : 12'd4);

assign p_val_V_cast_fu_170_p3 = ((grp_fu_128_p2[0:0] === 1'b1) ? 12'd2 : 12'd0);

assign storemerge1_cast_cas_fu_161_p3 = ((grp_fu_128_p2[0:0] === 1'b1) ? 12'd3 : 12'd1);

assign storemerge_cast_cast_fu_152_p3 = ((grp_fu_122_p2[0:0] === 1'b1) ? 12'd1 : 12'd2);

assign val_V_read_fu_66_p2 = current_state_i;

endmodule //StateMachine_getNextState
