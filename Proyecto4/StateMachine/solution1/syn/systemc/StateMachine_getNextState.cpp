// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "StateMachine_getNextState.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic StateMachine_getNextState::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic StateMachine_getNextState::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> StateMachine_getNextState::ap_ST_fsm_state1 = "1";
const sc_lv<2> StateMachine_getNextState::ap_ST_fsm_state2 = "10";
const sc_lv<32> StateMachine_getNextState::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<12> StateMachine_getNextState::ap_const_lv12_4 = "100";
const sc_lv<12> StateMachine_getNextState::ap_const_lv12_3 = "11";
const sc_lv<12> StateMachine_getNextState::ap_const_lv12_2 = "10";
const sc_lv<12> StateMachine_getNextState::ap_const_lv12_1 = "1";
const sc_lv<12> StateMachine_getNextState::ap_const_lv12_0 = "000000000000";
const sc_lv<1> StateMachine_getNextState::ap_const_lv1_1 = "1";
const sc_lv<1> StateMachine_getNextState::ap_const_lv1_0 = "0";
const sc_lv<32> StateMachine_getNextState::ap_const_lv32_1 = "1";
const sc_lv<8> StateMachine_getNextState::ap_const_lv8_61 = "1100001";
const sc_lv<8> StateMachine_getNextState::ap_const_lv8_62 = "1100010";
const bool StateMachine_getNextState::ap_const_boolean_1 = true;

StateMachine_getNextState::StateMachine_getNextState(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_StateMachine_state_V);
    sensitive << ( v_V_reg_92 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_StateMachine_state_V_ap_vld);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_CS_fsm);

    SC_METHOD(thread_ap_CS_fsm_state1);

    SC_METHOD(thread_ap_CS_fsm_state2);

    SC_METHOD(thread_ap_phi_mux_v_V_phi_fu_96_p18);
    sensitive << ( current_state_i );
    sensitive << ( val_V_read_fu_66_p2 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( storemerge_cast_cast_fu_152_p3 );
    sensitive << ( storemerge1_cast_cas_fu_161_p3 );
    sensitive << ( grp_fu_122_p2 );
    sensitive << ( p_val_V_cast_fu_170_p3 );
    sensitive << ( p_val_V1_cast_fu_143_p3 );
    sensitive << ( p_val_V2_cast_fu_134_p3 );

    SC_METHOD(thread_current_state_o);
    sensitive << ( current_state_i_ap_vld );
    sensitive << ( ap_phi_mux_v_V_phi_fu_96_p18 );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_current_state_o_ap_vld);
    sensitive << ( current_state_i_ap_vld );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_122_p2);
    sensitive << ( key );
    sensitive << ( current_state_i_ap_vld );
    sensitive << ( val_V_read_fu_66_p2 );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_128_p2);
    sensitive << ( key );
    sensitive << ( current_state_i_ap_vld );
    sensitive << ( val_V_read_fu_66_p2 );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_122_p2 );

    SC_METHOD(thread_p_val_V1_cast_fu_143_p3);
    sensitive << ( grp_fu_128_p2 );

    SC_METHOD(thread_p_val_V2_cast_fu_134_p3);
    sensitive << ( grp_fu_128_p2 );

    SC_METHOD(thread_p_val_V_cast_fu_170_p3);
    sensitive << ( grp_fu_128_p2 );

    SC_METHOD(thread_storemerge1_cast_cas_fu_161_p3);
    sensitive << ( grp_fu_128_p2 );

    SC_METHOD(thread_storemerge_cast_cast_fu_152_p3);
    sensitive << ( grp_fu_122_p2 );

    SC_METHOD(thread_val_V_read_fu_66_p2);
    sensitive << ( current_state_i );
    sensitive << ( current_state_i_ap_vld );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( current_state_i_ap_vld );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "StateMachine_getNextState_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, key, "(port)key");
    sc_trace(mVcdFile, current_state_i, "(port)current_state_i");
    sc_trace(mVcdFile, current_state_i_ap_vld, "(port)current_state_i_ap_vld");
    sc_trace(mVcdFile, current_state_o, "(port)current_state_o");
    sc_trace(mVcdFile, current_state_o_ap_vld, "(port)current_state_o_ap_vld");
    sc_trace(mVcdFile, StateMachine_state_V, "(port)StateMachine_state_V");
    sc_trace(mVcdFile, StateMachine_state_V_ap_vld, "(port)StateMachine_state_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, val_V_read_fu_66_p2, "val_V_read_fu_66_p2");
    sc_trace(mVcdFile, ap_phi_mux_v_V_phi_fu_96_p18, "ap_phi_mux_v_V_phi_fu_96_p18");
    sc_trace(mVcdFile, v_V_reg_92, "v_V_reg_92");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, storemerge_cast_cast_fu_152_p3, "storemerge_cast_cast_fu_152_p3");
    sc_trace(mVcdFile, storemerge1_cast_cas_fu_161_p3, "storemerge1_cast_cas_fu_161_p3");
    sc_trace(mVcdFile, grp_fu_122_p2, "grp_fu_122_p2");
    sc_trace(mVcdFile, p_val_V_cast_fu_170_p3, "p_val_V_cast_fu_170_p3");
    sc_trace(mVcdFile, p_val_V1_cast_fu_143_p3, "p_val_V1_cast_fu_143_p3");
    sc_trace(mVcdFile, p_val_V2_cast_fu_134_p3, "p_val_V2_cast_fu_134_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_fu_128_p2, "grp_fu_128_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

StateMachine_getNextState::~StateMachine_getNextState() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void StateMachine_getNextState::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
         esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_4) && 
         esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_0))) {
        v_V_reg_92 = p_val_V2_cast_fu_134_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
                esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_3) && 
                esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_0))) {
        v_V_reg_92 = p_val_V1_cast_fu_143_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
                esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_0) && 
                esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_0))) {
        v_V_reg_92 = p_val_V_cast_fu_170_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
                 esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_0) && 
                 esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
                 esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_3) && 
                 esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
                 esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_4) && 
                 esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_1)))) {
        v_V_reg_92 = ap_const_lv12_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
                esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_1))) {
        v_V_reg_92 = storemerge1_cast_cas_fu_161_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
                esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_2))) {
        v_V_reg_92 = storemerge_cast_cast_fu_152_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_4) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_3) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_2) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_1) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_0))) {
        v_V_reg_92 = current_state_i.read();
    }
}

void StateMachine_getNextState::thread_StateMachine_state_V() {
    StateMachine_state_V = v_V_reg_92.read();
}

void StateMachine_getNextState::thread_StateMachine_state_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        StateMachine_state_V_ap_vld = ap_const_logic_1;
    } else {
        StateMachine_state_V_ap_vld = ap_const_logic_0;
    }
}

void StateMachine_getNextState::thread_ap_CS_fsm() {
    ap_CS_fsm = ap_ST_fsm_state1;
}

void StateMachine_getNextState::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_ST_fsm_state1[0];
}

void StateMachine_getNextState::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_ST_fsm_state1[1];
}

void StateMachine_getNextState::thread_ap_phi_mux_v_V_phi_fu_96_p18() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_4) && 
         esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_0))) {
        ap_phi_mux_v_V_phi_fu_96_p18 = p_val_V2_cast_fu_134_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_3) && 
                esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_0))) {
        ap_phi_mux_v_V_phi_fu_96_p18 = p_val_V1_cast_fu_143_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_0) && 
                esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_0))) {
        ap_phi_mux_v_V_phi_fu_96_p18 = p_val_V_cast_fu_170_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_0) && 
                 esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_3) && 
                 esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_4) && 
                 esl_seteq<1,1,1>(grp_fu_122_p2.read(), ap_const_lv1_1)))) {
        ap_phi_mux_v_V_phi_fu_96_p18 = ap_const_lv12_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_1))) {
        ap_phi_mux_v_V_phi_fu_96_p18 = storemerge1_cast_cas_fu_161_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_2))) {
        ap_phi_mux_v_V_phi_fu_96_p18 = storemerge_cast_cast_fu_152_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_4) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_3) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_2) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_1) && 
                !esl_seteq<1,12,12>(val_V_read_fu_66_p2.read(), ap_const_lv12_0))) {
        ap_phi_mux_v_V_phi_fu_96_p18 = current_state_i.read();
    } else {
        ap_phi_mux_v_V_phi_fu_96_p18 = "XXXXXXXXXXXX";
    }
}

void StateMachine_getNextState::thread_current_state_o() {
    current_state_o = ap_phi_mux_v_V_phi_fu_96_p18.read();
}

void StateMachine_getNextState::thread_current_state_o_ap_vld() {
    if ((esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        current_state_o_ap_vld = ap_const_logic_1;
    } else {
        current_state_o_ap_vld = ap_const_logic_0;
    }
}

void StateMachine_getNextState::thread_grp_fu_122_p2() {
    grp_fu_122_p2 = (!key.read().is_01() || !ap_const_lv8_61.is_01())? sc_lv<1>(): sc_lv<1>(key.read() == ap_const_lv8_61);
}

void StateMachine_getNextState::thread_grp_fu_128_p2() {
    grp_fu_128_p2 = (!key.read().is_01() || !ap_const_lv8_62.is_01())? sc_lv<1>(): sc_lv<1>(key.read() == ap_const_lv8_62);
}

void StateMachine_getNextState::thread_p_val_V1_cast_fu_143_p3() {
    p_val_V1_cast_fu_143_p3 = (!grp_fu_128_p2.read()[0].is_01())? sc_lv<12>(): ((grp_fu_128_p2.read()[0].to_bool())? ap_const_lv12_4: ap_const_lv12_3);
}

void StateMachine_getNextState::thread_p_val_V2_cast_fu_134_p3() {
    p_val_V2_cast_fu_134_p3 = (!grp_fu_128_p2.read()[0].is_01())? sc_lv<12>(): ((grp_fu_128_p2.read()[0].to_bool())? ap_const_lv12_2: ap_const_lv12_4);
}

void StateMachine_getNextState::thread_p_val_V_cast_fu_170_p3() {
    p_val_V_cast_fu_170_p3 = (!grp_fu_128_p2.read()[0].is_01())? sc_lv<12>(): ((grp_fu_128_p2.read()[0].to_bool())? ap_const_lv12_2: ap_const_lv12_0);
}

void StateMachine_getNextState::thread_storemerge1_cast_cas_fu_161_p3() {
    storemerge1_cast_cas_fu_161_p3 = (!grp_fu_128_p2.read()[0].is_01())? sc_lv<12>(): ((grp_fu_128_p2.read()[0].to_bool())? ap_const_lv12_3: ap_const_lv12_1);
}

void StateMachine_getNextState::thread_storemerge_cast_cast_fu_152_p3() {
    storemerge_cast_cast_fu_152_p3 = (!grp_fu_122_p2.read()[0].is_01())? sc_lv<12>(): ((grp_fu_122_p2.read()[0].to_bool())? ap_const_lv12_1: ap_const_lv12_2);
}

void StateMachine_getNextState::thread_val_V_read_fu_66_p2() {
    val_V_read_fu_66_p2 = current_state_i.read();
}

void StateMachine_getNextState::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(current_state_i_ap_vld.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

}

