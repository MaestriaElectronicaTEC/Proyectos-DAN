// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _StateMachine_HH_
#define _StateMachine_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "StateMachine_getNextState.h"

namespace ap_rtl {

struct StateMachine : public sc_module {
    // Port declarations 5
    sc_in_clk clock;
    sc_in< sc_lv<8> > key;
    sc_in< sc_lv<12> > current_state_i;
    sc_out< sc_lv<12> > current_state_o;
    sc_in< sc_logic > ap_rst;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    StateMachine(sc_module_name name);
    SC_HAS_PROCESS(StateMachine);

    ~StateMachine();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    StateMachine_getNextState* grp_StateMachine_getNextState_fu_44;
    sc_signal< sc_lv<1> > StateMachine_ssdm_load_fu_56_p1;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_lv<12> > grp_StateMachine_getNextState_fu_44_current_state_o;
    sc_signal< sc_logic > grp_StateMachine_getNextState_fu_44_current_state_o_ap_vld;
    sc_signal< sc_lv<12> > grp_StateMachine_getNextState_fu_44_StateMachine_state_V;
    sc_signal< sc_logic > grp_StateMachine_getNextState_fu_44_StateMachine_state_V_ap_vld;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_current_state_o();
    void thread_StateMachine_ssdm_load_fu_56_p1();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state2();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
