// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bidirectional_counter,hls_ip_2018_2,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.547000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=24,HLS_SYN_LUT=81,HLS_VERSION=2018_2}" *)

module bidirectional_counter (
        clock,
        reset,
        enable,
        mode,
        counter_out_i,
        counter_out_o,
        ap_rst
);


input   clock;
input   reset;
input   enable;
input   mode;
input  [11:0] counter_out_i;
output  [11:0] counter_out_o;
input   ap_rst;

reg[11:0] counter_out_o;

wire   [0:0] bidirectional_counte_load_fu_68_p1;
wire   [1:0] ap_CS_fsm;
wire   [11:0] StgValue_12_bidirectional_counter_mode_choice_fu_52_counter_out_o;
wire    StgValue_12_bidirectional_counter_mode_choice_fu_52_counter_out_o_ap_vld;
wire   [11:0] StgValue_12_bidirectional_counter_mode_choice_fu_52_bidirectional_counter_count_V_o;
wire    StgValue_12_bidirectional_counter_mode_choice_fu_52_bidirectional_counter_count_V_o_ap_vld;
wire    ap_CS_fsm_state2;
reg   [11:0] bidirectional_counter_count_V;

bidirectional_counter_mode_choice StgValue_12_bidirectional_counter_mode_choice_fu_52(
    .ap_clk(clock),
    .ap_rst(ap_rst),
    .reset(reset),
    .enable(enable),
    .mode(mode),
    .counter_out_i(counter_out_i),
    .counter_out_o(StgValue_12_bidirectional_counter_mode_choice_fu_52_counter_out_o),
    .counter_out_i_ap_vld(1'b1),
    .counter_out_o_ap_vld(StgValue_12_bidirectional_counter_mode_choice_fu_52_counter_out_o_ap_vld),
    .bidirectional_counter_count_V_i(bidirectional_counter_count_V),
    .bidirectional_counter_count_V_o(StgValue_12_bidirectional_counter_mode_choice_fu_52_bidirectional_counter_count_V_o),
    .bidirectional_counter_count_V_o_ap_vld(StgValue_12_bidirectional_counter_mode_choice_fu_52_bidirectional_counter_count_V_o_ap_vld)
);

always @ (posedge clock) begin
    if ((1'b1 == StgValue_12_bidirectional_counter_mode_choice_fu_52_bidirectional_counter_count_V_o_ap_vld)) begin
        bidirectional_counter_count_V <= StgValue_12_bidirectional_counter_mode_choice_fu_52_bidirectional_counter_count_V_o;
    end
end

always @ (posedge clock) begin
    if ((1'b1 == StgValue_12_bidirectional_counter_mode_choice_fu_52_counter_out_o_ap_vld)) begin
        counter_out_o <= StgValue_12_bidirectional_counter_mode_choice_fu_52_counter_out_o;
    end else begin
        counter_out_o <= counter_out_i;
    end
end

assign ap_CS_fsm = 2'd0;

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign bidirectional_counte_load_fu_68_p1 = 1'd0;

endmodule //bidirectional_counter
